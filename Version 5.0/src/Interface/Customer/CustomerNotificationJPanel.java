/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Business.Customer.Customer;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajaygoel
 */
public class CustomerNotificationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerNotificationJPanel
     */
    JPanel userProcessContainer;
    Ecosystem business;
    Customer customer;
    UserAccount account;

    CustomerNotificationJPanel(JPanel userProcessContainer, Enterprise enterprise, Ecosystem business, Customer customer, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customer = customer;
        this.business = business;
        this.account = account;
        populate_table();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        notificationJTbl = new javax.swing.JTable();
        readBtn = new javax.swing.JButton();
        deleteNotifJBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        totalNotifJTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        unreadNotiJTxtField = new javax.swing.JTextField();
        readNotifJTxtField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("View Notifications");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        backJBtn.setText("Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });
        add(backJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 314, -1, -1));

        notificationJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Notification Date", "Details", "Read/Unread"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(notificationJTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 172, 832, 119));

        readBtn.setText("Mark as Read");
        readBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readBtnActionPerformed(evt);
            }
        });
        add(readBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 314, -1, -1));

        deleteNotifJBtn.setText("Delete Notification");
        deleteNotifJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteNotifJBtnActionPerformed(evt);
            }
        });
        add(deleteNotifJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 314, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Total Notifications: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 61, 140, -1));

        totalNotifJTxtField.setEditable(false);
        add(totalNotifJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 58, 40, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Read: ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 99, 120, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Unread: ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 137, 120, -1));

        unreadNotiJTxtField.setEditable(false);
        add(unreadNotiJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 134, 40, -1));

        readNotifJTxtField.setEditable(false);
        add(readNotifJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 96, 40, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/Push-notification-1.jpg"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1430, 1040));
    }// </editor-fold>//GEN-END:initComponents

    
    public void populate_table()       
            
    {
        
        totalNotifJTxtField.setText(Integer.toString(customer.getNotification().getTotalNotifications()));
        readNotifJTxtField.setText(Integer.toString(customer.getNotification().getReadNotifications()));
        unreadNotiJTxtField.setText(Integer.toString(customer.getNotification().getUnreadNotifications()));
        
        

        DefaultTableModel dtm = (DefaultTableModel) notificationJTbl.getModel();
        dtm.setRowCount(0);
        

        Iterator it = customer.getNotification().getNotificationList().entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry pair = (Map.Entry) it.next();
            String notif = (String) pair.getKey();
            Boolean isRead = (Boolean) pair.getValue();
            Object row[] = new Object[3];
            String str[] = notif.split("::");
            row[0] = str[0];
            row[1] = str[1];
            if (isRead) {
                row[2] = "READ";
            } else {
                row[2] = "UNREAD";

            }
            dtm.addRow(row);

        }

        
    }
    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
    
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerWAJPanel cwajp = (CustomerWAJPanel) component;
        cwajp.showJBadgeButton();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void readBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readBtnActionPerformed
        // TODO add your handling code here:
        
        int row = notificationJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String date= (String) notificationJTbl.getValueAt(row, 0);
        String details= (String) notificationJTbl.getValueAt(row, 1);
        String status= (String) notificationJTbl.getValueAt(row, 2);

        if (status.equals("READ")) {
            JOptionPane.showMessageDialog(null, "This notification is already marked as READ. Please select another.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String notif= date+"::"+details;
        
        customer.getNotification().getNotificationList().put(notif, Boolean.TRUE);
        JOptionPane.showMessageDialog(null, "The notification has been successfully marked as READ.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

        populate_table();
        
        
    }//GEN-LAST:event_readBtnActionPerformed

    private void deleteNotifJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteNotifJBtnActionPerformed
        // TODO add your handling code here:
        
             int row = notificationJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String date= (String) notificationJTbl.getValueAt(row, 0);
        String details= (String) notificationJTbl.getValueAt(row, 1);
        String status= (String) notificationJTbl.getValueAt(row, 2);
        
        String notif= date+"::"+details;
        customer.getNotification().getNotificationList().remove(notif);
        JOptionPane.showMessageDialog(null, "The notification has been successfully deleted.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

        populate_table();
    }//GEN-LAST:event_deleteNotifJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton deleteNotifJBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable notificationJTbl;
    private javax.swing.JButton readBtn;
    private javax.swing.JTextField readNotifJTxtField;
    private javax.swing.JTextField totalNotifJTxtField;
    private javax.swing.JTextField unreadNotiJTxtField;
    // End of variables declaration//GEN-END:variables
}
