/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer;

import Business.Customer.Customer;
import Business.Customer.Product;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.DeliveryOrganisation;
import Business.Organisation.Grocery.GroceryOrganisation;
import Business.Organisation.Grocery.GroceryProduct;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import Business.Utility.Wallet;
import Business.WorkQueue.DeliverWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.util.Date;
import javafx.scene.chart.Chart;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ajaygoel
 */
public class CustomerGroceriesWA1JPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerGroceriesWA1JPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    Ecosystem business;
    GroceryOrganisation groceryOrganisation;
    Customer customer;

    CustomerGroceriesWA1JPanel(JPanel userProcessContainer, Enterprise enterprise, Ecosystem business, GroceryOrganisation groceryOrganisation, Customer customer, UserAccount account) {

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        this.enterprise = enterprise;
        this.groceryOrganisation = groceryOrganisation;
        this.customer = customer;
        populate_table();
        
    }

    public void populate_table() {

        DefaultTableModel dtm = (DefaultTableModel) orderListJTbl.getModel();
        dtm.setRowCount(0);
        for (Product p : customer.getProdList()) {
            Object row[] = new Object[5];
            row[0] = p;
            row[1] = p.getProductQuant();
            row[2] = p.getPrice();
            row[3] = p.getOrder_status();
            row[4] = p.getAuto_refill();
            dtm.addRow(row);

        }

    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderListJTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ViewMarketJBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        changeRequirementsBtn = new javax.swing.JButton();
        DeliveryTimingsGraphBtn = new javax.swing.JButton();
        backJBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        addQtyJBtn = new javax.swing.JButton();
        addedProductValueJTxtField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 303, -1, -1));

        jLabel1.setText("Manage Groceries Last Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 11, -1, -1));

        orderListJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Order Quantity", "Order Price", "Order Status", "Auto Refill"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderListJTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 789, 126));

        jLabel2.setText("View Market:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 196, -1, -1));

        jLabel3.setText("Change Qty requirements:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 237, -1, -1));

        ViewMarketJBtn.setText("Market");
        ViewMarketJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewMarketJBtnActionPerformed(evt);
            }
        });
        add(ViewMarketJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 192, 139, -1));

        jLabel5.setText("View Delivery timings:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, -1, -1));

        changeRequirementsBtn.setText("Change Requirements");
        changeRequirementsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeRequirementsBtnActionPerformed(evt);
            }
        });
        add(changeRequirementsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 233, -1, -1));

        DeliveryTimingsGraphBtn.setText("Delivery timings Graph");
        DeliveryTimingsGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeliveryTimingsGraphBtnActionPerformed(evt);
            }
        });
        add(DeliveryTimingsGraphBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, -1, -1));

        backJBtn.setText("Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });
        add(backJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel6.setText("Consumption of the Product");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        addQtyJBtn.setText("Add Quantity");
        addQtyJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQtyJBtnActionPerformed(evt);
            }
        });
        add(addQtyJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, -1, -1));
        add(addedProductValueJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 320, 72, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/change.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void ViewMarketJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMarketJBtnActionPerformed
        // TODO add your handling code here:
        Interface.Customer.BrowseProductsJPanel icbpjp = new Interface.Customer.BrowseProductsJPanel(userProcessContainer, customer, business, account, groceryOrganisation);
        userProcessContainer.add("Interface.Customer.BrowseProductsJPanel", icbpjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_ViewMarketJBtnActionPerformed

    private void changeRequirementsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeRequirementsBtnActionPerformed
        // TODO add your handling code here:
        Interface.Customer.ChangeRequirementsJPanel iccrjp = new Interface.Customer.ChangeRequirementsJPanel(userProcessContainer, customer, business, account, groceryOrganisation);
        userProcessContainer.add("Interface.Customer.BrowseProductsJPanel", iccrjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_changeRequirementsBtnActionPerformed

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerWAJPanel cwajp = (CustomerWAJPanel) component;
        cwajp.showJBadgeButton();
        cwajp.populateComboBox();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void addQtyJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQtyJBtnActionPerformed
         // TODO add your handling code here:
        int qty_consume = 0;

        int row = orderListJTbl.getSelectedRow();
        if (addedProductValueJTxtField.getText().equals("")) {
            qty_consume = 1;
            JOptionPane.showMessageDialog(null, "Quantity 1 added in Consumption", "Information", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
            try {
                qty_consume = Integer.parseInt(addedProductValueJTxtField.getText());
            } catch (NumberFormatException numberFormatException) {
            }

        }
        
        Wallet wallet = customer.getWalletObj();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            Product p = (Product) orderListJTbl.getValueAt(row, 0);
            for (Product p2 : customer.getProdList()) {
                //if (p2.getProdName().equals(p.getProdName())) {
                System.out.println(p2.getProdName());
                if ((p2.getName().equals(p.getName()))&&(p2.getAuto_refill().equals(true))){//==true) {
                    int x =p2.getQuantity_left() - qty_consume;
                    p2.setQuantity_left(x);
                    System.out.println(qty_consume);
                    System.out.println(p2.getQuantity_left());
                    System.out.println(x);
                    if (p2.getQuantity_left() < p2.getThreshold()) {                           //Product p2 = customer.addProduct();
                       p2.setName(p2.getName());
//                    p2.setPrice(pp.getPrice());
//                    p2.setProductQuant(pp.getProductQuant());
//                    p2.setThreshold(pp.getThreshold());
                        p2.setOrder_status("Automatically generated at grocery");
                        //p2.setAvail(pp.getAvail());
                        //p2.setProdName(pp.getProdName());

                        DeliverWorkRequest request = new DeliverWorkRequest();
                        request.setMessage("Automatically generated");
                        request.setSender(account);
                        request.setStatus("Automatically generated");
                        request.setProduct(p2);
                        request.setCust(customer);
                        Date date = new Date();
                        request.setRequestDate(date);
                        GroceryOrganisation g = new GroceryOrganisation();
                        g = groceryOrganisation;
                        

                        if (g != null) {
                            g.getWorkQueue().getReqList().add(request);
                            account.getWorkQueue().getReqList().add(request);
                            customer.getWorkList().getReqList().add(request);
                            request.getCust().debitMoney(request,(double)(p2.getPrice() * p2.getProductQuant()));
                            
                            JOptionPane.showMessageDialog(null, "Request for refill is processed", "Information", JOptionPane.INFORMATION_MESSAGE);
                            addedProductValueJTxtField.setText("");
                            break;
                        }
                        }
                    
                }
                
                if(p2.getProdName()==p.getProdName()&&p.getAuto_refill()==false)
                {
                    JOptionPane.showMessageDialog(null, "This Product cannot be refilled. If you want to refill it order it again from the market with ticked checkbox.", "Information", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }

            }
        }
        populate_table();

    }//GEN-LAST:event_addQtyJBtnActionPerformed

    private void DeliveryTimingsGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeliveryTimingsGraphBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeliveryTimingsGraphBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeliveryTimingsGraphBtn;
    private javax.swing.JButton ViewMarketJBtn;
    private javax.swing.JButton addQtyJBtn;
    private javax.swing.JTextField addedProductValueJTxtField;
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton changeRequirementsBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderListJTbl;
    // End of variables declaration//GEN-END:variables

}
