/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Security;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Employee.SecurityEmployee;
import Business.Enterprise.Enterprise;
import Business.Organisation.Organisation;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ankit
 */
public class SecurityRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SecurityRequestsJPanel
     */
       JPanel userProcessContainer;
    UserAccount account;
    Organisation organization;
    Enterprise enterprise;
    Ecosystem business;

    SecurityRequestsJPanel(JPanel userProcessContainer, UserAccount account, Organisation organization, Enterprise enterprise, Ecosystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.business = business;
        this.enterprise = enterprise;

        populateTable();
        populateComboBox();
    }
    
    public void populateTable(){
        
         DefaultTableModel dtm = (DefaultTableModel) secReqJTbl.getModel();
        dtm.setRowCount(0);
        
            for (WorkRequest wr : account.getWorkQueue().getReqList()) {

                Object Row[] = new Object[6];
                Row[0] = wr.getCust();
                Row[1] = wr.getCust().getStreet();
                Row[2] = wr;
                Row[3] = wr.getMessage();
                Row[4] = wr.getStatus();
                Row[5] = wr.getReceiver();

                dtm.addRow(Row);
            }
        
    }
    
    public void populateComboBox(){
        
        empJComboBox.removeAllItems();
        for(Employee e:organization.getEmpList().getEmployeeDirectory()){
            if(e.getRole().toString().equals(Role.RoleType.SecurityStaff.getValue())){
                empJComboBox.addItem(e);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backJBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        secReqJTbl = new javax.swing.JTable();
        assignToJBtn = new javax.swing.JButton();
        empJComboBox = new javax.swing.JComboBox<>();
        completeJBtn = new javax.swing.JButton();
        cancelRequest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Security Requests");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        backJBtn.setText("Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });
        add(backJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 195, -1, -1));

        secReqJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Details", "Street Name", "Request Date", "Message", "Status", "Assigned To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(secReqJTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 58, 708, 119));

        assignToJBtn.setText("Assign To");
        assignToJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToJBtnActionPerformed(evt);
            }
        });
        add(assignToJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 195, -1, -1));

        add(empJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 196, 150, -1));

        completeJBtn.setText("Complete");
        completeJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeJBtnActionPerformed(evt);
            }
        });
        add(completeJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 195, -1, -1));

        cancelRequest.setText("Cancel Request");
        cancelRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRequestActionPerformed(evt);
            }
        });
        add(cancelRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(611, 195, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/security.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void assignToJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToJBtnActionPerformed
        // TODO add your handling code here:
        
        int row = secReqJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SecurityEmployee emp = (SecurityEmployee) empJComboBox.getSelectedItem();
        WorkRequest wr = (WorkRequest) secReqJTbl.getValueAt(row, 2);

        if (wr.getStatus().equals("CLOSED")) {
            JOptionPane.showMessageDialog(null, "The request is already completed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(!wr.getCust().getStreet().equalsIgnoreCase(emp.getStreetName())){
            JOptionPane.showMessageDialog(null, "Please assign security staff from  same location as  customer", "Warning", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        
        emp.getWorkQueue().getReqList().add(wr);
        System.out.println(emp.getEmpUserAcc().getUserName());
        wr.setReceiver(emp.getEmpUserAcc());

       // wr.setSender(account);
               wr.getCust().getNotification().addNotification(wr);

        JOptionPane.showMessageDialog(null, "The request has been successfully assigned", "Information", JOptionPane.INFORMATION_MESSAGE);

        populateTable();
        
    }//GEN-LAST:event_assignToJBtnActionPerformed

    private void completeJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeJBtnActionPerformed
        // TODO add your handling code here:
        int row = secReqJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest wr = (WorkRequest) secReqJTbl.getValueAt(row, 2);
        if (wr.getStatus().equals("CLOSED")) {
            JOptionPane.showMessageDialog(null, "This request has already been closed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        // wr.getCust().getGarbageDetails().setGarbageContainerWeight(0);
        String location = wr.getCust().getStreet();

        ArrayList<String> list = new ArrayList<>();

        for (Employee e : organization.getEmpList().getEmployeeDirectory()) {
            if (e.getRole().toString().equals(Role.RoleType.SecurityStaff.getValue())) {
                SecurityEmployee sec = (SecurityEmployee) e;
                if (sec.getStreetName().equalsIgnoreCase(location)) {
                    list.add(sec.getName() + " : " + sec.getTimeSlot());
                }
            }
        }

        if (list.size() == 0) {
            JOptionPane.showMessageDialog(null, "There are no security staff available for customer's location. Please cancel the request", "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }

        wr.setStatus("CLOSED");

        Date resolveDate = new Date();
        wr.setResolveDate(resolveDate);

        wr.setMessage(list.toString());

        wr.getCust().getNotification().addNotification(wr);

        JOptionPane.showMessageDialog(null, "The request has been completed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        populateTable();
    }//GEN-LAST:event_completeJBtnActionPerformed

    private void cancelRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRequestActionPerformed
        // TODO add your handling code here:
        int row = secReqJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest wr = (WorkRequest) secReqJTbl.getValueAt(row, 2);
        if (wr.getStatus().equals("CLOSED")) {
            JOptionPane.showMessageDialog(null, "This request has already been closed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (wr.getStatus().equals("CANCELLED")) {
            JOptionPane.showMessageDialog(null, "This request has already been closed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        // wr.getCust().getGarbageDetails().setGarbageContainerWeight(0);
        wr.setStatus("CANCELLED");

        Date resolveDate = new Date();
        wr.setResolveDate(resolveDate);

        wr.setMessage("There are no security staff available for customer's location. Please try after sometime. ");

        wr.getCust().getNotification().addNotification(wr);

        JOptionPane.showMessageDialog(null, "The request has been successfully CANCELLED. ", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        populateTable();


    }//GEN-LAST:event_cancelRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToJBtn;
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton cancelRequest;
    private javax.swing.JButton completeJBtn;
    private javax.swing.JComboBox<Object> empJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable secReqJTbl;
    // End of variables declaration//GEN-END:variables
}
