/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Security;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.Organisation.SecurityOrganisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ankit
 */
public class SecurityEnterpriseWRJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SecurityEnterpriseWRJPanel
     */
        JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount account;
    Ecosystem business;

    SecurityEnterpriseWRJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, Ecosystem business) {
     initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.business=business;

        populateComboBox();
        populateSentReqTable();
        populateReceivedReqTable();   
    }
    
       public Enterprise.EnterpriseType getEnterpriseType(UserAccount account) {
              System.out.println("getting instance 1");

        Ecosystem ecosystem = business;
        
        System.out.println("Eco new= "+ecosystem);

        for (Network net : ecosystem.getNetworkDirectory()) {
            for (Enterprise enterprise : net.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount ua : enterprise.getUserAccountDir().getUserAccountDirectory()) {
                    if (ua.equals(account)) {
                        return enterprise.getEnterpriseType();
                    }
                    for (Organisation org : enterprise.getOrganisationDirectory().getOrganizationlist()) {
                        for (UserAccount ub : org.getUserAccountDir().getUserAccountDirectory()) {
                            if (ub.equals(account)) {
                                return enterprise.getEnterpriseType();
                            }
                        }
                    }
                }
            }

        }

        return null;

    }
    
    public void populateComboBox() {

        emtAdminsJComboBox.removeAllItems();
        for (Organisation o : enterprise.getOrganisationDirectory().getOrganizationlist()) {
            emtAdminsJComboBox.addItem(o);
        }
    }

    public void populateSentReqTable() {
        
        DefaultTableModel dtm= (DefaultTableModel) sendReqJTable.getModel();
        dtm.setRowCount(0);
        System.out.println("take 2: "+account.getWorkQueue().getReqList());
        
        for (WorkRequest wr : account.getWorkQueue().getReqList()) {
            
            if(wr.getSender().equals(account)){
            Object Row[] = new Object[5];
            Row[0] = wr.getCust();
            Row[1] = getEnterpriseType(wr.getReceiver());
            Row[2] = wr;
            Row[3] = wr.getMessage();
            Row[4] = wr.getStatus();
            dtm.addRow(Row);
            }

        }


    }

    public void populateReceivedReqTable() {

        Enterprise.EnterpriseType entType = getEnterpriseType(account);

        DefaultTableModel dtm = (DefaultTableModel) receReqJTbl.getModel();
        dtm.setRowCount(0);

        for (WorkRequest wr : account.getWorkQueue().getReqList()) {

            if (!wr.getSender().equals(account)) {
                Object Row[] = new Object[5];
                Row[0] = wr.getCust();
                Row[1] = getEnterpriseType(wr.getSender());
                Row[2] = wr;
                Row[3] = wr.getMessage();
                Row[4] = wr.getStatus();

                dtm.addRow(Row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sendReqJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receReqJTbl = new javax.swing.JTable();
        assignToJBtn = new javax.swing.JButton();
        emtAdminsJComboBox = new javax.swing.JComboBox<>();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Enterpise Level Work Request");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Outgoing Work Requests");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 58, -1, -1));

        sendReqJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Detail", "Receiver Enterprise", "Reuqest Date", "Request Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(sendReqJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 93, 709, 97));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Incoming Work Requests");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 208, -1, -1));

        receReqJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Detail", "Sender Enterprise", "Reuqest Date", "Request Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(receReqJTbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 243, 709, 97));

        assignToJBtn.setText("Assign To:");
        assignToJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToJBtnActionPerformed(evt);
            }
        });
        add(assignToJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 358, -1, -1));

        add(emtAdminsJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 359, 214, -1));

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 399, 83, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignToJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToJBtnActionPerformed
        // TODO add your handling code here:
        Organisation o = (Organisation) emtAdminsJComboBox.getSelectedItem();
        int row = receReqJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //Employee emp = (Employee) EmployeeComboBox.getSelectedItem();
        WorkRequest wr = (WorkRequest) receReqJTbl.getValueAt(row, 2);

        if (wr.getStatus().equals("CLOSED")) {
            JOptionPane.showMessageDialog(null, "The request is already completed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        for (UserAccount ua : o.getUserAccountDir().getUserAccountDirectory()) {
            System.out.println(ua.getRole().toString());
            if (ua.getRole().toString().contains("dmin")) {
                System.out.println(ua.getRole().toString());
                ua.getWorkQueue().getReqList().add(wr);
                wr.setReceiver(ua);
                //wr.setSender(account);

            }
        }
        
        for(Organisation org:enterprise.getOrganisationDirectory().getOrganizationlist()){
            if(org instanceof SecurityOrganisation){
                org.getWorkQueue().getReqList().add(wr);
            }
        }
       // account.getWorkQueue().getReqList().remove(wr);
         wr.setStatus("ASSIGNED");
                 wr.getCust().getNotification().addNotification(wr);


        JOptionPane.showMessageDialog(null, "The request has been successfully assigned to organization admin.", "Information", JOptionPane.INFORMATION_MESSAGE);

        populateReceivedReqTable();
    }//GEN-LAST:event_assignToJBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        //Component[] componentArray = userProcessContainer.getComponents();
        //Component component = componentArray[componentArray.length - 1];
        //SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToJBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<Object> emtAdminsJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable receReqJTbl;
    private javax.swing.JTable sendReqJTable;
    // End of variables declaration//GEN-END:variables
}
